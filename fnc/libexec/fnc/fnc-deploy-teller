#!/usr/bin/env bash

set -e

# shellcheck source=lib/common.sh
. "${0%/*}/../../lib/common.sh"

registry=$(seth --to-bytes32  $(seth --from-ascii "CONTRACT_LP_GOLD_ERC20_TOKEN"))
seth send -F $OWNER $ISETTINGSREGISTRY "setAddressProperty(bytes32,address)" $registry $TOKEN_LP_GOLD_RING
registry=$(seth --to-bytes32  $(seth --from-ascii "CONTRACT_LP_WOOD_ERC20_TOKEN"))
seth send -F $OWNER $ISETTINGSREGISTRY "setAddressProperty(bytes32,address)" $registry $TOKEN_LP_WOOD_RING
registry=$(seth --to-bytes32  $(seth --from-ascii "CONTRACT_LP_WATER_ERC20_TOKEN"))
seth send -F $OWNER $ISETTINGSREGISTRY "setAddressProperty(bytes32,address)" $registry $TOKEN_LP_WATER_RING
registry=$(seth --to-bytes32  $(seth --from-ascii "CONTRACT_LP_FIRE_ERC20_TOKEN"))
seth send -F $OWNER $ISETTINGSREGISTRY "setAddressProperty(bytes32,address)" $registry $TOKEN_LP_FIRE_RING
registry=$(seth --to-bytes32  $(seth --from-ascii "CONTRACT_LP_SOIL_ERC20_TOKEN"))
seth send -F $OWNER $ISETTINGSREGISTRY "setAddressProperty(bytes32,address)" $registry $TOKEN_LP_SOIL_RING

METADATATELLER=$(dapp create src/MetaDataTeller.sol:MetaDataTeller)
addAddress "METADATATELLER" "$METADATATELLER"
echo >&2 "${0##*/}: info: MetaDataTeller created."

# 1
calldata=$(seth calldata "initialize(address)" $ISETTINGSREGISTRY)
METADATATELLER_PROXY=$(dapp create src/MetaDataTellerProxy.sol:MetaDataTellerProxy $METADATATELLER $FURNACEPROXYADMIN $calldata)
addAddress "METADATATELLER_PROXY" "$METADATATELLER_PROXY"
echo >&2 "${0##*/}: info: MetaDataTellerProxy inited."

# setting registry
registry=$(seth --to-bytes32 $(seth --to-hex $(seth --from-ascii "CONTRACT_METADATA_TELLER")))
seth send -F $OWNER $ISETTINGSREGISTRY "setAddressProperty(bytes32,address)" $registry $METADATATELLER_PROXY
if test $(seth call $ISETTINGSREGISTRY "addressOf(bytes32)(address)" $registry) != $METADATATELLER_PROXY; then
  (echo "check register ${registry} failed."; exit 1;)
fi
echo >&2 "${0##*/}: info: installerEncoder register finished."

